var Panel = ReactBootstrap.Panel, Accordion = ReactBootstrap.Accordion;
var Button = ReactBootstrap.Button, Input = ReactBootstrap.Input;
var ButtonToolbar = ReactBootstrap.ButtonToolbar;
var Modal = ReactBootstrap.Modal;
var OverlayTrigger = ReactBootstrap.OverlayTrigger;


var books = (typeof localStorage["bookstore"] != "undefined") ?
    JSON.parse(localStorage["bookstore"]) :
    [
        {title: "Harry Potter and the Sorcerer's Stone", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 1 in the Harry Potter book series by J.K. Rowling", price: "10$"},
        {title: "Harry Potter And The Chamber Of Secrets", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 2 in the Harry Potter book series by J.K. Rowling", price: "10$"},
        {title: "Harry Potter and the Prisoner of Azkaban", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 3 in the Harry Potter book series by J.K. Rowling", price: "10$"},
        {title: "Harry Potter And The Goblet Of Fire", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 4 in the Harry Potter book series by J.K. Rowling", price: "10$"},
        {title: "Harry Potter And The Order Of The Phoenix", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 5 in the Harry Potter book series by J.K. Rowling", price: "10$"},
        {title: "Harry Potter and the Half-Blood Prince ", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 6 in the Harry Potter book series by J.K. Rowling", price: "10$"},
        {title: "Harry Potter and the Deathly Hallows", imageURL: "https://s-media-cache-ak0.pinimg.com/564x/92/c3/43/92c3438606c53f479a430ca456ea5e92.jpg", description: "Book 7 in the Harry Potter book series by J.K. Rowling", price: "10$"}
    ],
    globalTitle = "", globalImageURL = "", globalDescription = "", globalPrice = ""; // Define global variables

// Bookstore class. This holds all books.
class Bookstore extends React.Component{
    render() {
        return (
            <div>
                <Accordion>
                    {this.props.data}
                </Accordion>
            </div>
        );
    }
}

// Book class. This is the display for a book in Bookstore
class Book extends React.Component{
    remove() {
        books.splice(this.props.index, 1);
        update();
    }
    edit() {
        globalTitle = this.props.title;
        globalImageURL = this.props.imageURL;
        globalDescription = this.props.description;
        globalPrice = this.props.price;
        document.getElementById("show").click();
    }
    render() {
        return (
            <div>
                <h4 className="text-center">Info</h4><hr/>
                <Image imageURL={this.props.imageURL} />
                <Description description={this.props.description} />
                <Price price={this.props.price} />
                <ButtonToolbar>
                    <Button class="delete" bsStyle="danger" id={"btn-del"+this.props.index} onClick={this.remove.bind(this)}>Delete</Button>
                    <Button bsStyle="warning" id={"btn-edit"+this.props.index} onClick={this.edit.bind(this)}>Edit</Button>
                </ButtonToolbar>
            </div>
        );
    }
}

// This lists all info for a Book
function Image(props) {
  return(
    <img src={props.imageURL} />
  );
}

function Description(props){
  return(
    <div>
      <h3>About</h3>
      <p>{props.description}</p>
    </div>
   );
}

const Price = props => <p>Price: {props.price}</p>

//'Add' button and modal
class AddBook extends React.Component{
    constructor(props) {
        super(props);
        this.state = { showModal: false };
    }
    close() {
        globalTitle = "";
        globalImageURL = "";
        globalDescription = "";
        globalPrice = "";
        this.setState({ showModal: false });
    }
    open() {
        this.setState({ showModal: true });
        if (document.getElementById("title") && document.getElementById("info")) {
            $("#title").val(globalTitle);
            $("#imageURL").val(globalImageURL);
            $("#description").val(globalDescription);
            $("#price").val(globalPrice);
            if (globalTitle != "") {
                $("#modalTitle").text("Edit book info");
                $("#addButton").text("Edit book info");
            }
        }
        else requestAnimationFrame(this.open);
    }
    add() {
        var title = document.getElementById("title").value;
        var imageURL = document.getElementById("imageURL").value;
        var description = document.getElementById("description").value;
        var price = document.getElementById("price").value
        var exists = false;
        for (var i = 0; i < books.length; i++) {
            if (books[i].title === title) {
                books[i].imageURL = imageURL;
                books[i].description = description;
                books[i].price = price;
                exists = true;
                break;
            }
        }
        if (!exists) {
            if (title.length < 1) title = "Untitled";
            books.push({title: title, imageURL: document.getElementById("imageURL").value, description: document.getElementById("description").value, price: document.getElementById("price").value });
        }
        update();
        this.close();
    }
    render() {
        return (
            <div>
                <Button
                    bsStyle="primary"
                    bsSize="large"
                    onClick={this.open.bind(this)}
                    id="show"
                >
                    Add a new book
                </Button>
                <Modal show={this.state.showModal} onHide={this.close.bind(this)}>
                    <Modal.Header closeButton>
                        <Modal.Title id="modalTitle">Add a book</Modal.Title>
                    </Modal.Header>
                    <Modal.Body>
                        <form>
                            <Input type="text" label="Book"  placeholder="Enter title" id="title" />
                            <Input type="text" label="ImageURL" placeholder="Enter image url" id="imageURL"/>
                            <Input type="text" label="Description" placeholder="Enter description" id="description"/>
                            <Input type="text" label="Price" placeholder="Enter price" id="price"/>
                        </form>
                    </Modal.Body>
                    <Modal.Footer>
                        <Button onClick={this.add.bind(this)} bsStyle="primary" id="addButton">Save changes</Button>
                        <Button onClick={this.close.bind(this)}>Close</Button>
                    </Modal.Footer>
                </Modal>
            </div>
        );
    }
}

// Update function to display all the books
function update() {
    localStorage.setItem("bookstore", JSON.stringify(books));
    var rows = [];
    for (var i=0; i < books.length; i++) {
        rows.push(
            <Panel header={books[i].title} eventKey={i} bsStyle="success">
                <Book 
                  title={books[i].title} 
                  imageURL={books[i].imageURL} 
                  description={books[i].description}
                  price={books[i].price}
                  index={i}/>
            </Panel>
        );
    }
    ReactDOM.render(<Bookstore data={rows}/>, document.getElementById("app"));
};

ReactDOM.render(<AddBook/>, document.getElementById("button"));
update();